!function(){angular.module("angulayers.directives").directive("azLayer",["angulayers.config","angulayers.services.layers","$parse",function(config,layerService){var defaults=config.defaults,MAP_DIRECTIVES=["ol-map","leaflet-map"],inmapQuery="";$.each(MAP_DIRECTIVES,function(n,val){n>0&&(inmapQuery+=","),inmapQuery+="*["+val+"], "+val});var lyrDir={restrict:"EA",replace:!0,html:"",scope:{},link:function(scope,elem,attrs){var opts={};$.each(attrs,function(key,val){if(attrs.hasOwnProperty(key)&&!angular.isObject(val)&&!angular.isFunction(val)){var pval;try{pval=scope.$eval(val)}catch(e){pval=void 0}opts[key]=angular.isDefined(pval)?pval:val,"version"==key&&isNaN(pval)&&(opts[key]=val)}}),opts=angular.extend(opts,opts.lyrOptions);var type=attrs.lyrType,url=attrs.lyrUrl;delete opts.lyrOptions,delete opts.lyrType,delete opts.lyrUrl;var name=attrs.name,layers=layerService.layers,inmap=elem.parents(inmapQuery).length>0,maplib="undefined"!=typeof OpenLayers?"ol":"undefined"!=typeof L?"leaflet":null;opts.maplib&&(maplib=opts.maplib);var lyrConstruct;switch(type){case"tiles":lyrConstruct="ol"==maplib?ol_tiles:leaflet_tiles;break;case"wms":lyrConstruct="ol"==maplib?ol_wms:leaflet_wms;break;case"geojson":lyrConstruct="ol"==maplib?ol_geojson:leaflet_geojson}var layer=lyrConstruct(name,url,opts,inmap);layer&&layers["ol"==maplib?"push":"unshift"](layer),console.log(layers)}},ol_geojson=function(name,url,opts,inmap){var lyrOptKeys=["style","styleMap","filter","projection"],lyrOpt={mapLayer:inmap};$.each(lyrOptKeys,function(index,val){val in opts&&(lyrOpt[val]=opts[val],delete opts[val])});var layer=new OpenLayers.Layer.Vector(name,angular.extend({protocol:new OpenLayers.Protocol.HTTP(angular.extend({url:url,format:new OpenLayers.Format.GeoJSON},opts)),strategies:[opts.strategy||new OpenLayers.Strategy.Fixed]},lyrOpt));return layer},leaflet_geojson=function(name,url,opts,inmap){var lyrOptKeys=["pointToLayer","style","filter","onEachFeature"],lyrOpt={mapLayer:inmap,name:opts.name||"Vector"};$.each(lyrOptKeys,function(index,val){val in opts&&(lyrOpt[val]=opts[val],delete opts[val])});var layer=L.geoJson(null,lyrOpt);return $.ajax({dataType:"json",url:url,data:opts.params,success:function(data){layer.addData(data)}}),layer},ol_wms=function(name,url,opts,inmap){var paramKeys=["styles","layers","version","format","exceptions","transparent","crs"],params={};$.each(paramKeys,function(index,val){val in opts&&(params[val]=opts[val],delete opts[val])});var layer=new OpenLayers.Layer.WMS(name,url,params,opts);return layer.mapLayer=inmap,layer},leaflet_wms=function(name,url,opts,inmap){url=url.replace(/\${/g,"{"),opts.transparent&&(!opts.format||opts.format.indexOf("jpg")>-1)&&(opts.format="image/png");var layer=L.tileLayer.wms(url,angular.extend({mapLayer:inmap},opts)).on("loading",function(e){var lyr=e.target,projKey=lyr.wmsParams.version>="1.3"?"crs":"srs";opts[projKey]!=lyr.wmsParams[projKey]&&(lyr.wmsParams[projKey]=opts[projKey])});return layer},ol_tiles=function(name,url,opts,inmap){var subdomains=opts.subdomains!==!1&&(opts.subdomains||defaults.SUBDOMAINS);url||(url=defaults.TILE_URL);var urls=[],splitUrl=url.split("${s}");subdomains&&splitUrl.length>1?(delete opts.subdomains,$.each(subdomains,function(index,val){urls[index]=OpenLayers.String.format(splitUrl[0]+"${s}",angular.extend(opts,{s:val}))+splitUrl[1]})):urls=[url];var layer=new OpenLayers.Layer.XYZ(name,urls,angular.extend({projection:"EPSG:"+defaults.CRS,transitionEffect:"resize",wrapDateLine:!0},opts));return layer.mapLayer=inmap,layer},leaflet_tiles=function(name,url,opts,inmap){var subdomains=opts.subdomains!==!1&&(opts.subdomains||defaults.SUBDOMAINS);url||(url=defaults.TILE_URL),url=url.replace(/\${/g,"{");var layer=L.tileLayer(url,angular.extend({mapLayer:inmap,subdomains:subdomains},opts));return layer};return lyrDir}])}()(function(){var mod=angular.module("angulayers.directives");mod.directive("leafletMap",["angulayers.config","angulayers.services.layers","$parse",function(config,layerService,$parse){var defaults=config.defaults,addLayerCtl=function(map,layers,opts){var baseLyrs={},overLyrs={};$.each(layers,function(i,lyr){lyr.options.isBaseLayer===!0?baseLyrs[lyr.options.name]=lyr:overLyrs[lyr.options.name]=lyr}),L.control.layers(baseLyrs,overLyrs,opts).addTo(map)},addScaleCtl=function(map,opts){L.control.scale(opts).addTo(map)};return{restrict:"EA",priority:-10,link:function(scope,elem,attrs){var layers=layerService.getMapLayers(),center=attrs.center?attrs.center.split(","):defaults.CENTER.split(","),zoom=attrs.zoom||defaults.ZOOM,projection=attrs.projection||attrs.proj||attrs.crs||L.CRS["EPSG"+defaults.CRS],controls=attrs.controls?attrs.controls.split(","):[],controlOptions=angular.extend({},$parse(attrs.controlOpts)()),opts=angular.extend({},$parse(attrs.mapOpts)()),map=L.map(elem[0],angular.extend({crs:projection,center:center,zoom:zoom,layers:layers},opts));$.each(controls,function(i,ctl){var opts=controlOptions[ctl]||void 0;switch(ctl){case"layers":addLayerCtl(map,layers,opts);break;case"scale":addScaleCtl(map,opts)}})}}}])})()(function(){angular.module("angulayers.directives").directive("olMap",["angulayers.config","angulayers.services.layers","$parse",function(config,layerService,$parse){var defaults=config.defaults;return{restrict:"EA",priority:-10,link:function(scope,elem,attrs){var layers=layerService.getMapLayers(),center=attrs.center?attrs.center.split(","):defaults.CENTER.split(",").reverse(),zoom=attrs.zoom||defaults.ZOOM,projection=attrs.projection||attrs.proj||attrs.crs||"EPSG:"+defaults.CRS,dispProj=attrs.dispProjection||attrs.dispProj||"EPSG:"+defaults.DISP_CRS,controls=(attrs.controls||defaults.OL_CONTROLS).split(","),controlOptions=angular.extend(defaults.OL_CTRL_OPTS,$parse(attrs.controlOpts)()),mapCtls=[];$.each(controls,function(i,ctl){var opts=controlOptions[ctl]||void 0;ctl=ctl.replace(/^\w/,function(m){return m.toUpperCase()}),mapCtls.push(new OpenLayers.Control[ctl](opts))});var listeners={};$.each(attrs,function(key,val){var evtType=key.match(/map([A-Z]\w+)/);if(evtType){evtType=evtType[1].replace(/^[A-Z]/,function(m){return m.toLowerCase()});var $event={type:key};listeners[evtType]=function(evtObj){evtObj.evtType=evtObj.type,delete evtObj.type,elem.trigger(angular.extend({},$event,evtObj)),scope.$$phase||scope.$apply()};var fn=$parse(val);elem.bind(key,function(evt){fn(scope,evt)})}}),center=new OpenLayers.LonLat(center).transform("EPSG:4326",projection);var map=new OpenLayers.Map(elem[0],{projection:projection,displayProjection:dispProj,controls:mapCtls,center:center,zoom:zoom,layers:layers,eventListeners:listeners}),model=$parse(attrs.olMap);model&&model.assign(scope,map)}}}])})(),angular.module("angulayers.config",[]).value("angulayers.config",{defaults:{CENTER:"38,-99",ZOOM:5,CRS:"3857",DISP_CRS:"4326",OL_CONTROLS:"zoom,navigation,attribution",OL_CTRL_OPTS:{},TILE_URL:"http://otile${s}.mqcdn.com/tiles/1.0.0/map/${z}/${x}/${y}.png",SUBDOMAINS:[1,2,3,4]}}),angular.module("angulayers.services",["angulayers.config"]),angular.module("angulayers.directives",["angulayers.services","angulayers.config"]),angular.module("angulayers",["angulayers.services","angulayers.directives","angulayers.config"]),function(){angular.module("angulayers.services").factory("angulayers.services.layers",function(){var layerService={layers:[],getMapLayers:function(){var lyrs=[];return $.each(this.layers,function(i,lyr){lyr.mapLayer!==!1&&lyrs.push(lyr)}),lyrs}};return layerService})}()(function(){angular.module("angulayers.services").value("angulayers.services.map",{map:null})})();